<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">

 	<http pattern="/js/**" security="none" />
 	
 	<global-method-security secured-annotations="enabled"/>
 	
 	<beans:bean id="basicAuthenticationFilter"
          class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter"
          p:authenticationManager-ref="authenticationManager"
          p:authenticationEntryPoint-ref="basicAuthenticationEntryPoint" />

    <beans:bean id="basicAuthenticationEntryPoint"
          class="com.flybyu.api.support.PlainTextBasicAuthenticationEntryPoint"
          p:realmName="flybyu"/>

<!-- 
    <beans:bean id="formAuthenticationEntryPoint"
          class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
          p:authenticationManager-ref="authenticationManager"
          p:authenticationEntryPoint-ref="CustomAuthenticationEntryPoint" />
           -->

    <beans:bean id="daep" class="org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint">
        <beans:constructor-arg>
            <beans:map>
                <beans:entry key="hasHeader('User-Agent','Mozilla') or hasHeader('User-Agent','Opera') or hasHeader('User-Agent','Explorer')" value-ref="CustomAuthenticationEntryPoint" />
            </beans:map>
        </beans:constructor-arg>
        <beans:property name="defaultEntryPoint" ref="basicAuthenticationEntryPoint"/>
    </beans:bean>
 	
    <http use-expressions="true" create-session="stateless" realm="Protected API" auto-config="false" entry-point-ref="daep">
	    <custom-filter position="FORM_LOGIN_FILTER" ref="authenticationTokenProcessingFilter"/>
	    <custom-filter position="BASIC_AUTH_FILTER" ref="basicAuthenticationFilter" />
	    <intercept-url pattern="/index.jsp" access="permitAll" />
	    <intercept-url pattern="/dispatcher/**" access="hasRole('supervisor')" />
	    <intercept-url pattern="/secure/**" access="isAuthenticated()" />
	    <intercept-url pattern="/listAccounts.html" access="isAuthenticated()" />
	    <intercept-url pattern="/post.html" access="hasAnyRole('supervisor','teller')" />
	    <intercept-url pattern="/**" access="denyAll" />
        <!-- <form-login /> equals UsernamePasswordAuthenticationFilter-->
        <logout />
        <!-- <http-basic />  -->
    </http>

	<beans:bean id="CustomAuthenticationEntryPoint"
		class="com.flybyu.api.support.CustomAuthenticationEntryPoint" />
		
	<beans:bean class="com.flybyu.api.support.AuthenticationTokenProcessingFilter"
    	id="authenticationTokenProcessingFilter">
    	<beans:constructor-arg ref="authenticationManager" />
	</beans:bean>
	
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<beans:property name="url" value="jdbc:mysql://192.168.19.129:3306/flybyu"/>
		<beans:property name="username" value="root"/>
		<beans:property name="password" value="123456"/>
	</beans:bean>
		
	<beans:bean id="daoUserDetailsService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>

	<user-service id="userDetailsService">
	    <user name="rod" password="koala" authorities="supervisor, teller, user" />
        <user name="dianne" password="emu" authorities="teller, user" />
        <user name="scott" password="wombat" authorities="user" />
        <user name="peter" password="opal" authorities="user" />
  	</user-service>
  	
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="daoUserDetailsService">
        </authentication-provider>
    </authentication-manager>
</beans:beans>